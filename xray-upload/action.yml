name: "Upload Test Report to XRay"
description: "Authenticate to Xray Cloud and upload Xray test results"
branding:
  color: blue
  icon: upload-cloud

inputs:
  test_results_path:
    description: "Path to the test results file"
    required: true
    default: "./reports/xray/test-results.json"
  xray_base_url:
    description: "Xray Cloud base URL"
    required: true
    default: "https://eu.xray.cloud.getxray.app/api/v2"
  xray_client_id:
    description: "Xray Cloud Client ID (secret that should be available at org level)"
    required: true
  xray_client_secret:
    description: "Xray Cloud Client Secret (secret that should be available at org level)"
    required: true

outputs:
  execution_id:
    description: "Created/updated Test Execution key returned by Xray"
    value: ${{ steps.upload.outputs.execution_id }}

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        set -euo pipefail
        FILE_PATH="${{ inputs.test_results_path }}"
        if [ ! -f "$FILE_PATH" ]; then
          echo "Error: Test results file not found at: $FILE_PATH" >&2
          exit 1
        fi

    - name: Authenticate and upload to Xray
      id: upload
      shell: bash
      env:
        XRAY_CLIENT_ID: ${{ inputs.xray_client_id }}
        XRAY_CLIENT_SECRET: ${{ inputs.xray_client_secret }}
        XRAY_BASE_URL: ${{ inputs.xray_base_url }}
        FILE_PATH: ${{ inputs.test_results_path }}
      run: |
        set -euo pipefail

        if [ -z "${XRAY_CLIENT_ID:-}" ]; then
          echo "xray_client_id input is required" >&2
          exit 1
        fi
        if [ -z "${XRAY_CLIENT_SECRET:-}" ]; then
          echo "xray_client_secret input is required" >&2
          exit 1
        fi

        AUTH_URL="${XRAY_BASE_URL%/}/authenticate"

        echo "Authenticating to Xray..."
        # Build JSON without requiring jq
        AUTH_DATA=$(printf '{"client_id":"%s","client_secret":"%s"}' "$XRAY_CLIENT_ID" "$XRAY_CLIENT_SECRET")
        TOKEN=$(curl -sS -X POST "$AUTH_URL" -H "Content-Type: application/json" -d "$AUTH_DATA" | tr -d '"')

        if [ -z "$TOKEN" ]; then
          echo "Failed to authenticate to Xray" >&2
          exit 1
        fi
        echo "Authentication successful."

        echo "Uploading XRay test results from $FILE_PATH ..."

        IMPORT_URL="${XRAY_BASE_URL%/}/import/execution"
        RESPONSE=$(curl -sS -X POST "$IMPORT_URL" \
          -H "Authorization: Bearer $TOKEN" \
          -H "Content-Type: application/json" \
          --data @"$FILE_PATH")

        echo "Xray API responded with: $RESPONSE"

        EXECUTION_ID=$(echo "$RESPONSE" | grep -o '"key":"[^"]*"' | sed 's/"key":"\([^"]*\)"/\1/') || true
        echo "$EXECUTION_ID" > xray_id.txt
        echo "execution_id=$EXECUTION_ID" >> "$GITHUB_OUTPUT"
